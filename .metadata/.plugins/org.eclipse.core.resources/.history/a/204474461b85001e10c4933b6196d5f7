document.getElementById("cmtPostBtn").addEventListener('click', ()=>{
    const cmtText = document.getElementById('cmtText').value;
    const cmtWriter = document.getElementById('cmtWriter').innerText; 
    const cmtEmail = document.getElementById('cmtEmail').value;

    if(cmtText == "" || cmtText == null){ //댓글을 안 적었을 때
        alert("댓글을 입력해주세요.");
        document.getElementById('cmtText').focus();
        return false; //메서드 종료
    }else{
        let cmtData = {
            cmtBno : bnoVal, //jsp에서 보내준 값
            cmtEmail : cmtEmail,
            cmtNickName : cmtWriter,
            cmtContent : cmtText
        };
        console.log(cmtData);
        
        //전송 function
        postCommentToServer(cmtData).then(result => {
            if(result == 1){
                alert("댓글 등록 성공");
                //댓글 등록 후 인풋 빈값으로 만들어주기
                document.getElementById('cmtText').value = '';
            }

            //화면에 뿌리기
            spreadCommentList(bnoVal);
        })
    }//if문
})

//댓글 전송 메서드
async function postCommentToServer(cmtData){
    try{
        const url ="/communityCmt/post"; 
        const config = { 
            method : "post",
            headers : { 
                'Content-type' : 'application/json; charset=utf-8'
            },
            body : JSON.stringify(cmtData) 
        };

        const resp = await fetch(url, config);
        const result = await resp.text(); 
        return result;

    }catch(err){
        console.log(err);
    }
}

//서버에 댓글 리스트를 달라고 요청
async function getCommentListFromServer(bno){
    try{
        const resp = await fetch('/communityCmt/'+bno);
        const result = await resp.json(); 
        return result; 
        
    }catch(err){
        console.log(err);
    }
}

//5
//paging -> 무조건 처음 뿌릴 때는 첫 페이지 값을 뿌려야 함
function spreadCommentList(bno){
    getCommentListFromServer(bno).then(result => {
        console.log(result); 
        const ul = document.getElementById('cmtListArea'); //댓글 영역을 감싸는 ul
        if(result.length > 0){ //댓글이 있다면
            ul.innerHTML = ""; //jsp에 임시로 넣어둔 댓글 표시영역을 지우고, 비어있는 값으로 바꿔버리기
            for(let cvo of result){
                let str = `<li class="list-group-item" data-cmtCno="${cvo.cmtCno}">`;
                str += `<div>`; 
                str += `<div class="fw-bold"><i class="bi bi-person-circle"></i>${cvo.cmtNickName}`;
                str += `<span class="badge rounded-pill text-bg-secondary">${cvo.cmtRegAt}</span>`;
                str += `<div class="dropdown">
                        <button class="btn btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                        ...
                        </button>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" href="#" class="modBtn">수정</a></li>
                            <li><a class="dropdown-item" href="#" class="delBtn">삭제</a></li>
                        </ul>
                    </div> </div>`
                str += `<div class="cmCon">${cvo.cmtContent}</div>`;
                str += `<div><a href="#">답글쓰기</a></div>`;
                str += `</div></li></ul>`;
                
                ul.innerHTML += str;
            }
        }else{
            let str = `<li>Comment List Empty</li>`;
            ul.innerHTML = str;
        }
    })
}
//str += `<div class="nickBtn"><button type="button" class="modBtn btn btn-success">수정</button> `;
//str += `<button type="button" class="delBtn btn btn-danger">삭제</button><div>`;

