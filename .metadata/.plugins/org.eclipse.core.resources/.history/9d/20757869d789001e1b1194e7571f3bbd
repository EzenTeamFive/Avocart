package com.avo.www.service;

import java.util.List;
import java.util.stream.Collectors;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.avo.www.domain.FileVO;
import com.avo.www.domain.PagingVO;
import com.avo.www.domain.ProductBoardVO;
import com.avo.www.domain.StoreBoardDTO;
import com.avo.www.handler.PagingHandler;
import com.avo.www.repository.StoreFileDAO;
import com.avo.www.repository.StoreBoardDAO;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class StoreBoardServiceImpl implements StoreBoardService {
	@Inject
	private StoreBoardDAO sdao;
	
	@Inject
	private StoreFileDAO fdao;

	@Transactional
	@Override
	public int insert(StoreBoardDTO sdto) {
		sdto.getPvo().setProEmail("email");
		sdto.getPvo().setProNickName("nickname");	
		int isOk = sdao.insert(sdto.getPvo());
		
		if(sdto.getFlist() == null) {
			isOk *= 1;
			return isOk;
		}
		
		if(isOk > 0 && sdto.getFlist().size() > 0) {
			long bno = sdao.selectOneBno(); 
	
			for(FileVO fvo : sdto.getFlist()) {
				fvo.setBno(bno);
				isOk*= fdao.insertFile(fvo);
			}
		}
		return isOk;
	}
	
	@Transactional
	@Override
	public StoreBoardDTO getDetail(long bno) {
		sdao.readCount(bno, 1);
		StoreBoardDTO sdto = new StoreBoardDTO(sdao.getDetail(bno), 
				fdao.getFileList(bno));
		return sdto;
	}
	
	@Transactional
	@Override
	public int modify(StoreBoardDTO sdto) {
		sdao.readCount(sdto.getPvo().getProBno(), -2);
		int isOk = sdao.update(sdto.getPvo());
		if(sdto.getFlist() == null) {
			isOk*=1;
			return isOk;
		}
		
		if(isOk>0 && sdto.getFlist().size()>0) {
			long bno = sdto.getPvo().getProBno();
			for(FileVO fvo : sdto.getFlist()) {
				fvo.setBno(bno);
				isOk *= fdao.insertFile(fvo);
			}
		}
		return isOk;
	}

	@Transactional
	@Override
	public int remove(long bno) {
		//파일 삭제
		int isOk = fdao.removeFileAll(bno);
		isOk *= sdao.delete(bno);
		return isOk;
	}

	@Transactional
	@Override
	public PagingHandler getList(PagingVO pgvo) {
		int totalCount = sdao.getTotalCount(pgvo);
		List<ProductBoardVO> list = sdao.SelectListPaging(pgvo);
		
		//list에서 proBno 값 추출
	    List<Long> bnoList = list.stream()
                .map(ProductBoardVO::getProBno)
                .collect(Collectors.toList());
	    // proBnoList를 사용하여 file 테이블에서 데이터를 가져옴
	    List<FileVO> fileList = fdao.getAllFileList(bnoList);
	    
	    if (fileList==null) {
	    	  PagingHandler ph = new PagingHandler(pgvo, totalCount, list);
	          // fileList를 PagingHandler에 추가 또는 사용
	    }
	    
		PagingHandler ph = new PagingHandler(pgvo, totalCount, list);
		return ph;
	}

	@Override
	public int getTotalCount(PagingVO pgvo) {
		return sdao.getTotalCount(pgvo);
	}

	@Override
	public int repost(long bno) {
		int isOk = sdao.repost(bno);
		return 0;
	}

	@Override
	public int removeFile(String uuid) {
		return fdao.removefile(uuid);
	}
}
